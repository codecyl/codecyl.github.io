<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Est的小窝</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="blog.codeest.moe/"/>
  <updated>2017-01-25T15:19:54.000Z</updated>
  <id>blog.codeest.moe/</id>
  
  <author>
    <name>Est</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jsoup抓取V2EX</title>
    <link href="blog.codeest.moe/2017/01/25/android-jsoup-v2ex/"/>
    <id>blog.codeest.moe/2017/01/25/android-jsoup-v2ex/</id>
    <published>2017-01-24T17:05:41.000Z</published>
    <updated>2017-01-25T15:19:54.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></h2><h1 id="Jsoup"><a href="#Jsoup" class="headerlink" title="Jsoup"></a>Jsoup</h1><p>Jsoup是Java的HTML解析器，可以通过类似jQuery的操作方法来解析出DOM结构中你需要的数据，对Android端而言，利用Jsoup可以给大部分网站做第三方客户端。<br>Jsoup最强大的莫过于它的元素选择器了，通过筛选语法可以获取到任意你需要的DOM树中的元素，下面是官方文档中的选择器语法：</p>
<blockquote>
<p>选择器概要（Selector overview）</p>
<ul>
<li>Tagname：通过标签查找元素（例如：a）</li>
<li>ns|tag：通过标签在命名空间查找元素，例如：fb|name查找<fb:name>元素</fb:name></li>
<li>id：通过ID查找元素，例如#logo</li>
<li>.class：通过类型名称查找元素，例如.masthead</li>
<li>[attribute]：带有属性的元素，例如[href]</li>
<li>[^attr]：带有名称前缀的元素，例如[^data-]查找HTML5带有数据集（dataset）属性的元素</li>
<li>[attr=value]：带有属性值的元素，例如[width=500]</li>
<li>[attr^=value]，[attr$=value]，[attr<em>=value]：包含属性且其值以value开头、结尾或包含value的元素，例如[href</em>=/path/]</li>
<li>[attr~=regex]：属性值满足正则表达式的元素，例如img[src~=(?i).(png|jpe?g)]</li>
<li>：所有元素，例如*</li>
</ul>
<p>选择器组合方法</p>
<ul>
<li>el#id:：带有ID的元素ID，例如div#logo</li>
<li>el.class：带类型的元素，例如. div.masthead</li>
<li>el[attr]：包含属性的元素，例如a[href]</li>
<li>任意组合：例如a[href].highlight</li>
<li>ancestor child：继承自某祖（父）元素的子元素，例如.body p查找“body”块下的p元素</li>
<li>parent &gt; child：直接为父元素后代的子元素，例如: div.content &gt; pf查找p元素，body &gt; * 查找body元素的直系子元素</li>
<li>siblingA + siblingB：查找由同级元素A前导的同级元素，例如div.head + div</li>
<li>siblingA ~ siblingX：查找同级元素A前导的同级元素X例如h1 ~ p</li>
<li>el, el, el：多个选择器组合，查找匹配任一选择器的唯一元素，例如div.masthead, div.logo</li>
</ul>
<p>伪选择器（Pseudo selectors）</p>
<ul>
<li>:lt(n)：查找索引值（即DOM树中相对于其父元素的位置）小于n的同级元素，例如td:lt(3)</li>
<li>:gt(n)：查找查找索引值大于n的同级元素，例如div p:gt(2)</li>
<li>:eq(n) ：查找索引值等于n的同级元素，例如form input:eq(1)</li>
<li>:has(seletor)：查找匹配选择器包含元素的元素，例如div:has(p)</li>
<li>:not(selector)：查找不匹配选择器的元素，例如div:not(.logo)</li>
<li>:contains(text)：查找包含给定文本的元素，大小写铭感，例如p:contains(jsoup)</li>
<li>:containsOwn(text)：查找直接包含给定文本的元素</li>
<li>:matches(regex)：查找其文本匹配指定的正则表达式的元素，例如div:matches((?i)login)</li>
<li>:matchesOwn(regex)：查找其自身文本匹配指定的正则表达式的元素<br>注意：上述伪选择器是0-基数的，亦即第一个元素索引值为0，第二个元素index为1等</li>
</ul>
</blockquote>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>今天是主角是我平时经常去逛的<a href="https://www.v2ex.com/" target="_blank" rel="external">V2EX</a><br>首先看V2EX网站某个板块的结构，呈列表状，那么只要能解析其中一个item的结构即可</p>
<p><img src="http://odck16ake.bkt.clouddn.com/android_jsoup_v2ex/0.png" alt=""></p>
<p>找到其中一个item对应的源码</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cell item"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">            </div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"48"</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/member/qile1"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"//cdn.v2ex.co/gravatar/03b6474fdca2de3813a9860d19acdaf8?s=48&amp;d=retro"</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"default"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            </div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"auto"</span> <span class="attr">valign</span>=<span class="string">"middle"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item_title"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/t/336709#reply10"</span>&gt;</span>threading 线程间通信如何控制线程运行及等待。<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sep5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"small fade"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"votes"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"node"</span> <span class="attr">href</span>=<span class="string">"/go/python"</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">a</span>&gt;</span> &amp;nbsp;•&amp;nbsp; <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/member/qile1"</span>&gt;</span>qile1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &amp;nbsp;•&amp;nbsp; 22 分钟前 &amp;nbsp;•&amp;nbsp; 最后回复来自 <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/member/sheep3"</span>&gt;</span>sheep3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"70"</span> <span class="attr">align</span>=<span class="string">"right"</span> <span class="attr">valign</span>=<span class="string">"middle"</span>&gt;</span></div><div class="line">                </div><div class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/t/336709#reply10"</span> <span class="attr">class</span>=<span class="string">"count_livid"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                </div><div class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>从上面的代码中可以看出，能获取到的信息有:</p>
<ul>
<li>头像url</li>
<li>发帖者昵称</li>
<li>最后回复时间</li>
<li>最后回复者</li>
<li>帖子所属节点</li>
<li>回帖数</li>
<li>帖子标题</li>
<li>帖子ID</li>
</ul>
<p>定义与之对应的Java Bean</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicListBean</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String imgUrl;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String updateTime;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String lastUser;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String node;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> commentNum;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String title;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String topicId;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>好了，接下来就是通过筛选语法定义HTML DOM -&gt; Java Bean的映射关系了</p>
<p>以解析标题为例子，需要筛选出的目标内容为<code>&lt;a href=&quot;/t/336709#reply10&quot;&gt;threading 线程间通信如何控制线程运行及等待。&lt;/a&gt;</code></p>
<ul>
<li>按照筛选语法的定义，带有class属性的标签可以通过<code>el.class</code>的方式引用，所以最外层的<code>&lt;div class=&quot;cell item&quot; style=&quot;&quot;&gt;</code>即写为<code>div.cell item</code>，但筛选语法规定class中不能出现空格，空格需要由<code>.</code>代替，所以需要改为<code>div.cell.item</code></li>
<li>然后语法规定，继承自某祖（父）元素的子元素可以通过空格的方式获取，那么子元素层层深入，即<code>div.cell.item table tr td</code></li>
<li>最后由title所在的span的class，获取该span，即<code>div.cell.item table tr td span.item_title</code>，取它的直接子元素a标签，即<code>div.cell.item table tr td span.item_title &gt; a</code></li>
</ul>
<p>同理写出其他元素的筛选语法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">div.cell.item table tr td span.item_title &gt; a   <span class="comment">//标题</span></div><div class="line">div.cell.item table tr td img.avatar              <span class="comment">//头像</span></div><div class="line">div.cell.item table tr span.small.fade a.node    <span class="comment">//节点</span></div><div class="line">div.cell.item table tr a.count_livid          <span class="comment">//评论数</span></div><div class="line">div.cell.item table tr span.small.fade strong a  <span class="comment">//作者 &amp; 最后回复</span></div><div class="line">div.cell.item table tr span.small.fade           <span class="comment">//更新时间</span></div></pre></td></tr></table></figure></p>
<h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p>这里开始，就要利用Jsoup的API来完整真正的解析了：</p>
<ul>
<li><code>Document dom = Jsoup.connect(host_url).timeout(10000).get();</code>,首先获取目标Web页面的整个DOM结构，这里需要传入url地址和连接超时时间，注意这一步由于是网络请求，需要在子线程中执行</li>
<li><code>Elements itemElements = doc.select(&quot;div.cell.item&quot;);</code>根据上面的分析，这一步会从DOM中筛选出所有的目标item，<code>itemElements</code>是这些item的List集合</li>
<li><code>Elements titleElements = itemElements.get(i).select(&quot;div.cell.item table tr td span.item_title &gt; a&quot;);</code>从List中取第i个item，并依照之前的分析，取到包含“标题“信息的a标签</li>
<li><code>String title = titleElements.get(0).attr(&quot;href&quot;)</code>，取该a标签中href属性的值，即标题</li>
<li>如果需要的字段不是标签的属性，而是标签的内容，比如解析帖子节点<code>&lt;a class=&quot;node&quot; href=&quot;/go/python&quot;&gt;Python&lt;/a&gt;</code>，需要获取的是a标签的内容<code>Python</code>，应该调用text方法，<code>String node = nodeElements.get(0).text()</code></li>
</ul>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.在取最后回复者时需要注意，其父标签span下包含两个strong标签<code>&lt;strong&gt;&lt;a href=&quot;/member/qile1&quot;&gt;qile1&lt;/a&gt;&lt;/strong&gt; &amp;nbsp;•&amp;nbsp; 22 分钟前 &amp;nbsp;•&amp;nbsp; 最后回复来自 &lt;strong&gt;&lt;a href=&quot;/member/sheep3&quot;&gt;sheep3&lt;/a&gt;&lt;/strong&gt;</code>,前者是最后回复时间，后者是最后回复者，且两个标签没有id或class等标志，如果按照<code>div.cell.item table tr span.small.fade strong a</code>这种筛选器语法来筛选的话会一次取到两个strong中的a标签，所以仅想获取后者的话需要这样写来<code>nameElements.get(1).text()</code>取第二项</p>
<p>2.在测试时发现解析有时会crash，调查后发现V2EX站点的item结构不是固定的，当帖子无人回复时DOM结构会不同，没有最后回复者、最后回复时间、评论数这三个信息，所以取这三条信息时要记得做额外判断<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//存在没有 最后回复者、评论数、更新时间的情况</div><div class="line">                            if (nameElements.size() &gt; 1) &#123;</div><div class="line">                                bean.setLastUser(nameElements.get(1).text());</div><div class="line">                            &#125;</div><div class="line">                            if (commentElements.size() &gt; 0) &#123;</div><div class="line">                                bean.setCommentNum(Integer.valueOf(commentElements.get(0).text()));</div><div class="line">                            &#125;</div><div class="line">                            if (timeElements.size() &gt; 1) &#123;</div><div class="line">                                bean.setUpdateTime(parseTime(timeElements.get(1).text()));</div><div class="line">                            &#125;</div></pre></td></tr></table></figure></p>
<h3 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h3><p>配合RxJava，最终代码如下，这里也能看到RxJava用起来真的方便、结构清晰：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">Observable.just(VtexApis.TAB_HOST + type)</div><div class="line">          .subscribeOn(Schedulers.io())</div><div class="line">          .map(<span class="keyword">new</span> Func1&lt;String, Document&gt;() &#123;</div><div class="line">              <span class="meta">@Override</span></div><div class="line">              <span class="function"><span class="keyword">public</span> Document <span class="title">call</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">                  <span class="keyword">try</span> &#123;</div><div class="line">                      <span class="keyword">return</span> Jsoup.connect(s).timeout(<span class="number">10000</span>).get();</div><div class="line">                  &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                      LogUtil.d(e.toString());</div><div class="line">                      e.printStackTrace();</div><div class="line">                  &#125;</div><div class="line">                  <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">              &#125;</div><div class="line">          &#125;)</div><div class="line">          .filter(<span class="keyword">new</span> Func1&lt;Document, Boolean&gt;() &#123;</div><div class="line">              <span class="meta">@Override</span></div><div class="line">              <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">(Document document)</span> </span>&#123;</div><div class="line">                  <span class="keyword">return</span> document != <span class="keyword">null</span>;</div><div class="line">              &#125;</div><div class="line">          &#125;)</div><div class="line">          .map(<span class="keyword">new</span> Func1&lt;Document, List&lt;TopicListBean&gt;&gt;() &#123;</div><div class="line">              <span class="meta">@Override</span></div><div class="line">              <span class="function"><span class="keyword">public</span> List&lt;TopicListBean&gt; <span class="title">call</span><span class="params">(Document doc)</span> </span>&#123;</div><div class="line">                  List&lt;TopicListBean&gt; mList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">                  Elements itemElements = doc.select(<span class="string">"div.cell.item"</span>);    <span class="comment">//item根节点</span></div><div class="line">                  <span class="keyword">int</span> count = itemElements.size();</div><div class="line">                  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">                      Elements titleElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr td span.item_title &gt; a"</span>);   <span class="comment">//标题</span></div><div class="line">                      Elements imgElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr td img.avatar"</span>);              <span class="comment">//头像</span></div><div class="line">                      Elements nodeElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr span.small.fade a.node"</span>);    <span class="comment">//节点</span></div><div class="line">                      Elements commentElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr a.count_livid"</span>);          <span class="comment">//评论数</span></div><div class="line">                      Elements nameElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr span.small.fade strong a"</span>);  <span class="comment">//作者 &amp; 最后回复</span></div><div class="line">                      Elements timeElements = itemElements.get(i).select(<span class="string">"div.cell.item table tr span.small.fade"</span>);           <span class="comment">//更新时间</span></div><div class="line"></div><div class="line">                      TopicListBean bean = <span class="keyword">new</span> TopicListBean();</div><div class="line"></div><div class="line">                      <span class="keyword">if</span> (titleElements.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                          bean.setTitle(titleElements.get(<span class="number">0</span>).text());</div><div class="line">                          bean.setTopicId(parseId(titleElements.get(<span class="number">0</span>).attr(<span class="string">"href"</span>)));</div><div class="line">                      &#125;</div><div class="line">                      <span class="keyword">if</span> (imgElements.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                          bean.setImgUrl(parseImg(imgElements.get(<span class="number">0</span>).attr(<span class="string">"src"</span>)));</div><div class="line">                      &#125;</div><div class="line">                      <span class="keyword">if</span> (nodeElements.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                          bean.setNode(nodeElements.get(<span class="number">0</span>).text());</div><div class="line">                      &#125;</div><div class="line">                      <span class="keyword">if</span> (nameElements.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                          bean.setName(nameElements.get(<span class="number">0</span>).text());</div><div class="line">                      &#125;</div><div class="line">                      <span class="comment">//存在没有 最后回复者、评论数、更新时间的情况</span></div><div class="line">                      <span class="keyword">if</span> (nameElements.size() &gt; <span class="number">1</span>) &#123;</div><div class="line">                          bean.setLastUser(nameElements.get(<span class="number">1</span>).text());</div><div class="line">                      &#125;</div><div class="line">                      <span class="keyword">if</span> (commentElements.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                          bean.setCommentNum(Integer.valueOf(commentElements.get(<span class="number">0</span>).text()));</div><div class="line">                      &#125;</div><div class="line">                      <span class="keyword">if</span> (timeElements.size() &gt; <span class="number">1</span>) &#123;</div><div class="line">                          bean.setUpdateTime(parseTime(timeElements.get(<span class="number">1</span>).text()));</div><div class="line">                      &#125;</div><div class="line"></div><div class="line">                      mList.add(bean);</div><div class="line">                  &#125;</div><div class="line">                  <span class="keyword">return</span> mList;</div><div class="line">              &#125;</div><div class="line">          &#125;)</div><div class="line">          .observeOn(AndroidSchedulers.mainThread())</div><div class="line">          .subscribe(<span class="keyword">new</span> Action1&lt;List&lt;TopicListBean&gt;&gt;() &#123;</div><div class="line">              <span class="meta">@Override</span></div><div class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(List&lt;TopicListBean&gt; mList)</span> </span>&#123;</div><div class="line">                  mView.showContent(mList);</div><div class="line">              &#125;</div><div class="line">          &#125;, <span class="keyword">new</span> Action1&lt;Throwable&gt;() &#123;</div><div class="line">              <span class="meta">@Override</span></div><div class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Throwable throwable)</span> </span>&#123;</div><div class="line">                  mView.showError(<span class="string">"数据加载失败"</span>);</div><div class="line">              &#125;</div><div class="line">          &#125;);</div></pre></td></tr></table></figure>
<p>运行效果<br><img src="http://odck16ake.bkt.clouddn.com/android_jsoup_v2ex/2.png" alt=""><br>项目地址<a href="https://github.com/codeestX/GeekNews" target="_blank" rel="external">GeekNews</a></p>
<p>收工跑路~٩(ˊᗜˋ*)و</p>
<h3 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h3><p><a href="http://www.cnblogs.com/chenying99/archive/2013/01/04/2844615.html" target="_blank" rel="external">使用 jsoup 对 HTML 文档进行解析和操作</a><br><a href="http://blog.csdn.net/atco/article/details/7834489" target="_blank" rel="external">jsoup select 选择器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间给GeekNews集成V2EX板块，但是无奈官方API提供的很不全面，索性就用Jsoup来解析了&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Android" scheme="blog.codeest.moe/categories/Android/"/>
    
    
      <category term="android" scheme="blog.codeest.moe/tags/android/"/>
    
      <category term="jsoup" scheme="blog.codeest.moe/tags/jsoup/"/>
    
      <category term="v2ex" scheme="blog.codeest.moe/tags/v2ex/"/>
    
  </entry>
  
  <entry>
    <title>2016年终小结</title>
    <link href="blog.codeest.moe/2017/01/01/life-2016/"/>
    <id>blog.codeest.moe/2017/01/01/life-2016/</id>
    <published>2017-01-01T15:32:08.000Z</published>
    <updated>2017-01-06T15:58:55.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<p>关于2016年，细想一下还是有不少东西值得记录的，总体来说算是比较充实的一年，就按照学习和生活两方面说吧。</p>
<h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>“疼痛使人清醒”，只有深刻的感受到了自己有多菜多平庸才会有努力的动力，这句话直白刺耳，但一定也是很多人的切身体会。在2016年年初当我连<code>GridView</code>都无法熟练使用的时候，我才知道自己既有的零碎Android知识已经无法满足开发需要了。是时候拟定计划，系统的开始学习之路了。</p>
<h2 id="上半年"><a href="#上半年" class="headerlink" title="上半年"></a>上半年</h2><p>上半年规划用半年时间来巩固基础，而且是系统的、完整的巩固，毕竟无论怎样的开发工作，基础始终是重要的一环，它既是高级技术的根基也是日常开发提升效率的关键。这部分我是通过看书 + 看视频 + 看技术博客来学习的，下面再分别来说：</p>
<h4 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h4><ul>
<li>《Thinking in Java》，即Java编程思想，厚厚的一本，但没有冗余，每章节的内容都很有价值，算是一本介于Java基础与进阶之间的书，看到很多人说过这本书每次看完一遍的感受都不一样，17年打算再看一遍</li>
<li>《Android开发艺术探索》，CSDN博主任玉刚（主席）写的一本Android进阶书，知识点覆盖比较全面，附带部分源码，不错的一本书，抽时间准备再来一遍</li>
<li>《Android群英转》，CSDN博主徐宜生（医生）写的一本Android进阶书，感觉比艺术探索稍简单一些，读完也是很有收获</li>
<li>《Android源码设计模式解析与实战》，非常好的一本书，作者算是手把手教你实践设计模式了，而且还例举出了设计模式在Android源码中的应用，源码和设计模式一起学习了</li>
</ul>
<h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><p>晚上看视频挺容易瞌睡的，所以有一定基础的情况下不太推荐花太多时间看视频，相比较看书和撸码这是一种比较被动的学习方式，只找自己感兴趣的视频看就好。对比过慕课网、极客学院、网易云公开课以后我选择了慕课网，大部分视频都是我比较感兴趣的，而且上面有很多Android界熟悉的面孔，比如Hyman鸿洋，这些CSDN博主常年写博客，能把技术内容表达的更易于理解。今天去慕课网看了下，累计学习时间50小时，不长不短吧…</p>
<h4 id="技术博客"><a href="#技术博客" class="headerlink" title="技术博客"></a>技术博客</h4><p>这块没什么好说的了，不少知名Android博主写的博文都很不错，鸿洋，郭霖，任玉刚，徐宜生，夏秋明，老罗，stormzhang等等，和视频一样，找自己感兴趣或者欠缺的知识点看。</p>
<h2 id="下半年"><a href="#下半年" class="headerlink" title="下半年"></a>下半年</h2><p>下半年是时候表演真正的技术了，把学到的知识亲手实践一遍才算真正的到碗里来，所以这半年时间一开始就拟定了去写一些开源项目以及掌握Android端的热门技术框架:  </p>
<ul>
<li>RxJava</li>
<li>Retrofit</li>
<li>Dagger2</li>
<li>Realm</li>
<li>DataBinding</li>
<li>Kotlin</li>
<li>MVP架构</li>
<li>MVVM架构</li>
</ul>
<p>8月份开始断断续续写了阅读应用GeekNews，实践了一部分上面的技术栈，9月收工准备发布到简书和掘金，这算是我第一次把项目公开到技术社区，为了不被Android Dalao花式打脸(￣ε(#￣)☆╰╮(￣▽￣///)期间写的也是比较用心，发布一个月后收到了超过1000的star，这也是一开始根本没有想到的，非常激动，也让我这个懒癌晚期感受到了作为生产者的好：</p>
<ul>
<li>1.自己完成规划的技术实践 </li>
<li>2.帮助别人，结识更多素不相识的人，互相交流，指出不足，共同进步 </li>
<li>3.自己也能获得一丝成就感</li>
</ul>
<p>10月份发现自己对前端越发感兴趣，看到别人能搭建出好看的Web页面很羡慕，于是过了一遍HTML/CSS/JavaScript/Node的基础教程，在平时用来科学上网的服务器上用node &amp; koa2搭了GeekNews检测更新用的API，在github pages上用Hexo &amp; Themia搭了自己的站点，并做了一点微小的工作（<del>魔改</del>）  </p>
<p>11月份逛dribbble时看到动效控件找到了灵感，过了一遍GcsSloop的Canvas系列教程巩固了一遍custom view相关的知识，花一周时间以及一张草稿纸写出了ENViews，发布一周后收到了1000+star以及android-arsenal，material UP的推荐邮件，还有Tesla OS组织的邀请，愈发让我感受到了开源的动力与魅力，也让我知道了和别人产生交流远比活在一个人的世界里更好</p>
<p>12月份在维护GeekNews的新版本和规划2017年的计划，一开始写这个App的目的主要是为了把它作为新技术的实践载体，现在打算把它做得更具有一定的使用价值，做好一个面向程序员/极客的纯粹的阅读器，陆续加上了自己喜欢的掘金和V2EX板块，现在GeekNews已经有5个板块了，新闻、技术、福利、创意社区具在，希望大家能喜欢</p>
<p>未来几年自己想深入学习的技术领域有：Android(移动端) + React(前端) + Node(后端)，重点还是放在深入Android上（这个可是拿来吃饭的！），目前自己对Android底层原理和一些框架源码的掌握还远远不够。在这一年的学习过程中也发现了很多Android大牛和厉害的开源项目，清楚的感受到了自己和他们仍然有很大的差距，要一直保持谦虚努力的心态才行，业余时间准备继续学习JavaScript（算是兴趣爱好，这也的确是一门很实用的语言），最后记录下2016年的Ranking图，希望17年能继续产出好的开源项目，也希望能由此结识更多人</p>
<p><img src="http://odck16ake.bkt.clouddn.com/life_2016_1.png" alt=""></p>
<h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>生活上依然过着很宅的日子，每天看一集动漫就可以满足的那种(￣ˇ￣)</p>
<h3 id="二次元-amp-ACG"><a href="#二次元-amp-ACG" class="headerlink" title="二次元 &amp; ACG"></a>二次元 &amp; ACG</h3><p>和小伙伴们去逛了一些展，3场Comicup，1场ChinaJoy，1场Bilibili Macro Link，都很热闹，买到一些小宅物也很开心  </p>
<p>游戏方面基本在玩手游和音游，端游、moba都已经没什么兴趣了，上半年主要在玩百万氪金王，后来立绘被焚化局通告和谐了，实在不能忍，把这个玩了一年的游戏给弃了，也不用氪金了╮(╯▽╰)╭。国庆玩了一周阴阳师，刚开始觉得挺好玩的，很有特色的一款游戏，后来觉得太肝，后期重复性略大，也弃之。下半年偶尔和小伙伴们一起玩玩守望先锋，不错的游戏，暴雪出品，必属精品。</p>
<h3 id="三次元"><a href="#三次元" class="headerlink" title="三次元"></a>三次元</h3><p>16年没怎么出门，只去了杭州、厦门，还有上海周边的一些小地方，周末看看电影看看书追追番，很喜欢《君名》，刷了两遍。17年如果有机会的话，国内想去成都/重庆旅游，国外想去日本旅游，不知道有没有机会实现心愿呢</p>
<p><b>好吧就扯这么多了，再见2016，加油2017！</b></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hi, 2017  Bey, 2016&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="blog.codeest.moe/categories/Life/"/>
    
    
      <category term="life" scheme="blog.codeest.moe/tags/life/"/>
    
      <category term="summary" scheme="blog.codeest.moe/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>《你的名字。》</title>
    <link href="blog.codeest.moe/2016/12/04/acg-yourname/"/>
    <id>blog.codeest.moe/2016/12/04/acg-yourname/</id>
    <published>2016-12-04T15:32:23.000Z</published>
    <updated>2016-12-15T16:48:31.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<embed width="850" height="706" align="center" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://share.acg.tv/flash.swf" flashvars="aid=7380766&amp;page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<div class="figure fig-100" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58991926.jpg" alt=""></div>
<div class="figure fig-50" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58731987.jpg" alt=""></div>
<div class="figure fig-50" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58851378.jpg" alt=""></div>
<div class="figure fig-100" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=59240220.jpg" alt=""></div>
<div class="figure fig-50" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58750676.jpg" alt=""></div>
<div class="figure fig-50" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58916524.jpg" alt=""></div>
<div class="figure fig-100" style="width:;"><img class="fig-img" src="http://odck16ake.bkt.clouddn.com/yourname/id=58898400.png" alt=""></div>
<p>PIXIV ID: 59214087、58991926、58731987、58851378、59240220、58750676、58916524、58898400</p>
<p>感谢诚哥带来的这部的触动人心的作品，票房实至名归，电影结束后全场不约而同的响起了掌声，这种贴近生活却又高于生活的故事真的可以带来难以磨灭的印象。</p>
<p>每一帧都可以截做壁纸的风景，插入时机合适的BGM，奇幻却又逻辑严谨的整体情节，表现力充分的分镜与CV，两个小时不知不觉间沉浸其中。</p>
<p>前半段伴随着许多笑点，后半段逐渐揭开伏笔，带来的与其说是泪点，不如说是一次又一次很直接的心灵的震颤。</p>
<ul>
<li><p>“喜欢你” “笨蛋，这几个字，我怎么知道你的名字啊”</p>
</li>
<li><p>只要记住你的名字，不管你在世界的哪个地方，我一定会再去见你。</p>
</li>
<li><p>重要的人，不能忘记的人，不想忘记的人。 你，是谁？</p>
</li>
</ul>
<p><b>所有的相遇，都是久别的重逢</b></p>
<p>————-华丽的分割线————–</p>
<p>2016-12-15 达成成就：二刷 (๑＞ڡ＜)☆</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;所有的相遇，都是久别的重逢&lt;br&gt;
    
    </summary>
    
      <category term="ACG" scheme="blog.codeest.moe/categories/ACG/"/>
    
    
      <category term="acg" scheme="blog.codeest.moe/tags/acg/"/>
    
      <category term="movie" scheme="blog.codeest.moe/tags/movie/"/>
    
  </entry>
  
  <entry>
    <title>折腾博客</title>
    <link href="blog.codeest.moe/2016/11/23/web-hexo/"/>
    <id>blog.codeest.moe/2016/11/23/web-hexo/</id>
    <published>2016-11-22T17:02:27.000Z</published>
    <updated>2016-11-24T17:24:23.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<h1 id="选择博客框架"><a href="#选择博客框架" class="headerlink" title="选择博客框架"></a>选择博客框架</h1><p>现在主流的博客框架有hexo, jeklly, WordPress三款，其中WordPress应该算是功能最强大的，自带MySQL数据库，数量众多的插件和主题，支持自定义各种侧边小控件，还有一个图形化界面管理后台，但是不像前两者可以方便的搭在GithubPages上，需要自己买台服务器提供空间，而且对markdown的支持貌似也不如前两者好。至于hexo和jeklly在特点上几乎没什么区别，只是一个基于nodejs一个基于ruby，都很轻量级，性能好速度快，近年来很火。</p>
<p>在分别尝试了用<a href="https://github.com/DIYgod/Amativeness" target="_blank" rel="external">Amativeness</a>主题配合WordPress建站和用<a href="https://github.com/kaedea/hexo-theme-themia" target="_blank" rel="external">Themia</a>主题配合Hexo建站后最后还是选择了后者，搭建完成发现还少了不少东西，需要继续折腾。</p>
<h1 id="多说"><a href="#多说" class="headerlink" title="多说"></a>多说</h1><p><a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>是国内知名的网站第三方评论系统，Themia基于的tranquilpeak主题中已经集成了多说，直接把申请到的key填入就可以生效了。但是没有做任何处理的默认的主题样式很一般…而且和Themia的风格也不怎么搭，不折腾一下能忍咩？好在多说支持自定义css属性，那就好办了，这里是<a href="http://dev.duoshuo.com/docs/4ff1cfd0397309552c000017" target="_blank" rel="external">自定义样式文档</a></p>
<p>直接分享下我的评论栏的css代码吧</p>
<ul>
<li><code>圆形头像与鼠标悬浮旋转</code>  </li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#ds-reset .ds-avatar img &#123;</div><div class="line">    width:54px;height:54px;</div><div class="line">    margin-right: 12px;</div><div class="line">    border-radius: 27px;</div><div class="line">    -webkit-border-radius: 27px;    </div><div class="line">    -moz-border-radius:27px;</div><div class="line">    box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">    -webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">    -webkit-transition: 0.4s;   </div><div class="line">    -webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">    transition: transform 0.4s ease-out;</div><div class="line">    -moz-transition: -moz-transform 0.4s ease-out;&#125;</div><div class="line"></div><div class="line">#ds-reset .ds-avatar img:hover&#123;    </div><div class="line">box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);</div><div class="line">    -webkit-box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);</div><div class="line">    transform: rotateZ(360deg);</div><div class="line">    -webkit-transform: rotateZ(360deg);</div><div class="line">    -moz-transform: rotateZ(360deg);&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>右侧的背景图片 url地址换成你的外链图片</code>  </li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-textarea-wrapper</span> <span class="selector-tag">textarea</span> &#123;<span class="attribute">background</span>:<span class="built_in">url</span>(http://odck16ake.bkt.clouddn.com/duoshuo.png) no-repeat right bottom <span class="meta">!important</span>; &#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>边框和按钮变圆角，设置背景色</code></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-textarea-wrapper</span> &#123;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="number">0px</span>;</div><div class="line">	<span class="attribute">background-color</span>: <span class="number">#F4F6F7</span>;&#125;</div><div class="line">	</div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-post-options</span> &#123;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">3px</span>;&#125;</div></pre></td></tr></table></figure>
<p>把上面的代码直接粘贴到多说后台自定义css中保存即可。到这里还没有结束，接下来还要给评论加上操作系统和浏览器信息，继续：</p>
<ul>
<li><code>添加样式</code></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span><span class="selector-class">.this_ua</span> &#123;<span class="attribute">background-color</span>: <span class="number">#ccc</span><span class="meta">!important</span>;<span class="attribute">border-radius</span>: <span class="number">4px</span>;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span>;<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span><span class="meta">!important</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#BBB</span><span class="meta">!important</span>;<span class="attribute">color</span>: <span class="number">#fff</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Windows</span>&#123;<span class="attribute">background-color</span>: <span class="number">#39b3d7</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#46b8da</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Linux</span> &#123;<span class="attribute">background-color</span>: <span class="number">#3A3A3A</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#1F1F1F</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Android</span> &#123;<span class="attribute">background-color</span>: <span class="number">#00C47D</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#01B171</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Chrome</span>&#123;<span class="attribute">background-color</span>: <span class="number">#5cb85c</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#4cae4c</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Firefox</span>&#123;<span class="attribute">background-color</span>: <span class="number">#f0ad4e</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#eea236</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.IE</span>&#123;<span class="attribute">background-color</span>: <span class="number">#428bca</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#357ebd</span><span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Opera</span>&#123;<span class="attribute">background-color</span>: <span class="number">#d9534f</span><span class="meta">!important</span>;<span class="attribute">border-color</span>: <span class="number">#d43f3a</span><span class="meta">!important</span>;&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>找到你的博客中的多说js代码，在后面紧接着添加引用ua-parser.js的部分</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">            <span class="keyword">var</span> duoshuoQuery = &#123;<span class="attr">short_name</span>:<span class="string">'codeest'</span>&#125;;</div><div class="line">            (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">                ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">                ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</div><div class="line">                ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">                (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]</div><div class="line">                || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">                ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">                ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">                ds.src = <span class="string">'http://faisalman.github.io/ua-parser-js/src/ua-parser.js'</span>;</div><div class="line">                ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">      (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">            &#125;)();</div><div class="line">        &lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>在上面这段代码下面再紧接着添加下面这段</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> DUOSHUO !== <span class="string">'undefined'</span>)hookDUOSHUO_tp();</div><div class="line">            <span class="keyword">else</span> $(<span class="string">'[src="http://static.duoshuo.com/embed.js"]'</span>)[<span class="number">0</span>].onload=hookDUOSHUO_tp;</div><div class="line">            <span class="function"><span class="keyword">function</span> <span class="title">hookDUOSHUO_tp</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                <span class="keyword">var</span> _D_post=DUOSHUO.templates.post</div><div class="line">                DUOSHUO.templates.post=<span class="function"><span class="keyword">function</span> (<span class="params">e,t</span>)</span>&#123;</div><div class="line">                    <span class="keyword">var</span> rs=_D_post(e,t);</div><div class="line">                    <span class="keyword">if</span>(e.post.agent&amp;&amp;<span class="regexp">/^Mozilla/</span>.test(e.post.agent))</div><div class="line">                        rs=rs.replace(<span class="regexp">/&lt;\/div&gt;&lt;p&gt;/</span>,show_ua(e.post.agent)+<span class="string">'&lt;/div&gt;&lt;p&gt;'</span>);</div><div class="line">                    <span class="keyword">return</span> rs;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="function"><span class="keyword">function</span> <span class="title">show_ua</span>(<span class="params">string</span>)</span>&#123;</div><div class="line">                $.ua.set(string);</div><div class="line">                <span class="keyword">var</span> sua=$.ua;</div><div class="line">                <span class="keyword">if</span>(sua.os.version==<span class="string">'x86_64'</span>)sua.os.version=<span class="string">'x64'</span>;</div><div class="line">                <span class="keyword">return</span> <span class="string">'&lt;span class="this_ua browser '</span>+sua.browser.name+<span class="string">'"&gt;'</span>+sua.browser.name+<span class="string">' | '</span>+sua.browser.version+<span class="string">'&lt;/span&gt;'</span>+<span class="string">'&lt;span class="this_ua platform '</span>+sua.os.name+<span class="string">'"&gt;'</span>+sua.os.name+<span class="string">' '</span>+sua.os.version+<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">            &#125;</div><div class="line">        &lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p>PS: 这里我又喜闻乐见的踩到坑了。。网上大部分的介绍在上面的代码中使用的都是<code>e.agent</code>，但是根据最新版的多说embed.js中的定义应该使用<code>e.post.agent</code>，修改完后总算看到效果了<br><img src="http://odck16ake.bkt.clouddn.com/web_hexo_0.png" alt=""></p>
<p>多说收工٩(ˊᗜˋ*)و</p>
<h1 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h1><p><a href="http://service.ibruce.info/" target="_blank" rel="external">不蒜子</a>是极简的网页计数器，用起来真的是低碳绿色环保，两句代码就能集成，帮助统计网站的访问量。官网上也写明了使用方法，我这里提下要点。</p>
<ul>
<li><code>首先在博客的script文件中加入这段脚本</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>然后在网站的bottom中插入总访问量PV和总访客数UV</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</div><div class="line">    本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</div><div class="line">  本站访客数&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;人次</div><div class="line">&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>最后在每篇文章中加入单页访问量PV</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=<span class="string">"busuanzi_container_page_pv"</span>&gt;</div><div class="line">  本文总阅读量&lt;span id=<span class="string">"busuanzi_value_page_pv"</span>&gt;&lt;/span&gt;次</div><div class="line">&lt;<span class="regexp">/span&gt;</span></div></pre></td></tr></table></figure>
<p>PS：我一开始手滑把单页PV用成了全站PV，还给不蒜子作者发邮件询问为什么统计量不对呢。。捂脸 &gt;///&lt;<br><img src="http://odck16ake.bkt.clouddn.com/web_hexo_1.png" alt=""></p>
<p>不蒜子收工٩(ˊᗜˋ*)و</p>
<h1 id="捐赠"><a href="#捐赠" class="headerlink" title="捐赠"></a>捐赠</h1><p>好吧。。这个破站现在并没有什么值得各路dalao打赏的干货，不过梦想还是要有的，万一有路过的好心人投了一颗糖或者送了一杯速溶咖啡呢，直接上代码吧。</p>
<ul>
<li><code>添加样式</code></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.donate_bar</span> &#123;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.donate_bar</span> <span class="selector-tag">a</span><span class="selector-class">.btn_donate</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">margin-left</span>: auto;</div><div class="line">    <span class="attribute">margin-right</span>: auto;</div><div class="line">    <span class="attribute">width</span>: auto;</div><div class="line">    <span class="attribute">height</span>: auto;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line">    <span class="attribute">letter-spacing</span>: .<span class="number">01em</span>;</div><div class="line">    <span class="attribute">cursor</span>: pointer;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#9eabb3</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#9eabb3</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">15px</span>;</div><div class="line">    <span class="attribute">-webkit-transition</span>: background <span class="number">0s</span>;</div><div class="line">    <span class="attribute">-moz-transition</span>: background <span class="number">0s</span>;</div><div class="line">    <span class="attribute">-o-transition</span>: background <span class="number">0s</span>;</div><div class="line">    <span class="attribute">-ms-transition</span>: background <span class="number">0s</span>;</div><div class="line">    <span class="attribute">transition</span>: background <span class="number">0s</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.donate_bar</span> <span class="selector-tag">a</span><span class="selector-class">.btn_donate</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">82px</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.donate_bar</span><span class="selector-class">.hidden</span>&#123;</div><div class="line">    <span class="attribute">display</span>: none</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.post-donate</span>&#123;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#donate_guide</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">210px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">420px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#donate_guide</span> <span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>代码部分，放到文章评论区上方即可</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span> </span>=<span class="string">"post-donate"</span>&gt;</div><div class="line">    &lt;div id="donate_board" class="donate_bar center"&gt;</div><div class="line">        &lt;a id="btn_donate" class="btn_donate" href="javascript:;" title="打赏"&gt;给作者投食戳这里OwO&lt;/a&gt;</div><div class="line">        &lt;br&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div id="donate_guide" class="donate_bar center hidden" &gt;</div><div class="line">        &lt;!-- 支付宝打赏图案 --&gt;</div><div class="line">        &lt;img src="http://odck16ake.bkt.clouddn.com/qr_alipay.png" alt="支付宝打赏"&gt;</div><div class="line">        &lt;!-- 微信打赏图案 --&gt;</div><div class="line">        &lt;img src="http://odck16ake.bkt.clouddn.com/qr_wechat.png" alt="微信打赏"&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;script type="text/javascript"&gt;</div><div class="line">        document.getElementById('btn_donate').onclick = function()&#123;</div><div class="line">            $('#donate_board').addClass('hidden');</div><div class="line">            $('#donate_guide').removeClass('hidden');</div><div class="line">        &#125;</div><div class="line">    &lt;/script&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>PS：上面的打赏按钮样式是根据Themia按钮风格来的，可以根据自己的博客风格微调，记得把代码中的支付宝和微信图案换成自己的，不然钱打到我的账户我可不管╮(￣▽￣)╭<br><img src="http://odck16ake.bkt.clouddn.com/web_hexo_2.png" alt=""><br>捐赠收工٩(ˊᗜˋ*)و</p>
<h1 id="性能与SEO优化"><a href="#性能与SEO优化" class="headerlink" title="性能与SEO优化"></a>性能与SEO优化</h1><p>性能关乎博客页面加载速度，SEO关乎搜索排名的前后，有余力的就把这块也一起折腾了吧，这方面内容比较多，而且已经有一些不错的文章介绍了这方面的内容，我就直接甩自己看过的文章链接了<br>性能: <a href="https://yq.aliyun.com/articles/8608" target="_blank" rel="external">Hexo折腾记——性能优化篇</a><br>SEO: <a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">Hexo Seo优化让你的博客在google搜索排名第一</a></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>这个博客在Themia的基础上还加了底部图片Banner，blog age计时，侧边栏样式优化，都是一些html/css/js的修改，没什么好说的了，很羡慕那些前端工程师们可以把自己的博客打点的很漂亮，Android党鸭梨山大(/ω＼)，以后前端知识精进了再继续折腾，到此结束~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间把博客大致折腾成了自己喜欢的样子，在这记录下吧&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="blog.codeest.moe/categories/Web/"/>
    
    
      <category term="web" scheme="blog.codeest.moe/tags/web/"/>
    
      <category term="hexo" scheme="blog.codeest.moe/tags/hexo/"/>
    
      <category term="blog" scheme="blog.codeest.moe/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>那些用了根本停不下来的插件</title>
    <link href="blog.codeest.moe/2016/09/25/tools-plugin/"/>
    <id>blog.codeest.moe/2016/09/25/tools-plugin/</id>
    <published>2016-09-25T09:45:57.000Z</published>
    <updated>2016-11-05T18:22:09.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<h1 id="Chrome篇"><a href="#Chrome篇" class="headerlink" title="Chrome篇"></a>Chrome篇</h1><p>先放图，20款我正在用的Chrome插件，访问插件商店前记得科学上网！<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_00.png" alt=""></p>
<h3 id="1-Vimium"><a href="#1-Vimium" class="headerlink" title="1. Vimium"></a>1. <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=zh-CN" target="_blank" rel="external">Vimium</a></h3><p>支持全键盘操作Chrome，浓浓的极客风，习惯了键盘快捷键后可以更高效的操作Chrome</p>
<h3 id="2-Momentum"><a href="#2-Momentum" class="headerlink" title="2. Momentum"></a>2. <a href="https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca?hl=zh-CN" target="_blank" rel="external">Momentum</a></h3><p>New Tab页面，每天一张精美的风景图，一句鸡汤，右下角还支持编辑记录TODO事件，非常简洁精致，让你的New Tab颜值爆炸<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_4.png" alt=""></p>
<h3 id="3-JSONView"><a href="#3-JSONView" class="headerlink" title="3. JSONView"></a>3. <a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-CN" target="_blank" rel="external">JSONView</a></h3><p>自动格式化页面上的Json结构体，让接口返回的结果一目了然，非常适合调试API的时候使用</p>
<h3 id="4-Adblock-Plus"><a href="#4-Adblock-Plus" class="headerlink" title="4. Adblock Plus"></a>4. <a href="https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN" target="_blank" rel="external">Adblock Plus</a></h3><p>这个可以算人人必备级别的插件了，高效屏蔽广告，baidu推广也可以屏蔽，真是打开了新世界的大门</p>
<h3 id="5-qiniu-upload-files"><a href="#5-qiniu-upload-files" class="headerlink" title="5. qiniu upload files"></a>5. <a href="https://chrome.google.com/webstore/detail/qiniu-upload-files/emmfkgdgapbjphdolealbojmcmnphdcc?hl=zh-CN" target="_blank" rel="external">qiniu upload files</a></h3><p>七牛图床，在七牛官网上申请好账户，在这个插件中配置申请到的key等信息，就可以直接拖图片进去立刻生成图片外链，方便在写作的时候插入图片,账户初始应该有50G的免费空间</p>
<h3 id="6-OneTab"><a href="#6-OneTab" class="headerlink" title="6. OneTab"></a>6. <a href="https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall?hl=zh-CN" target="_blank" rel="external">OneTab</a></h3><p>你一定遇到过这样的情景，Chrome中开了很多Tab页，导致占用的内存很高，但是每个页面都很有用，又舍不去关，那么就可以用OneTab来管理，把当前所有Tab页都回收到一个Tab里，需要的时候再还原</p>
<h3 id="7-Isometric-Contributions"><a href="#7-Isometric-Contributions" class="headerlink" title="7. Isometric Contributions"></a>7. <a href="https://chrome.google.com/webstore/detail/isometric-contributions/mjoedlfflcchnleknnceiplgaeoegien?hl=zh-CN" target="_blank" rel="external">Isometric Contributions</a></h3><p>可以将你在github上面的提交记录变得3D立体化的一个插件，用处不算大，可以玩玩</p>
<h3 id="8-Avatars-for-Github"><a href="#8-Avatars-for-Github" class="headerlink" title="8. Avatars for Github"></a>8. <a href="https://chrome.google.com/webstore/detail/avatars-for-github/pgjmdbklnfklcjfbonjfkdhaonlfogbb?hl=zh-CN" target="_blank" rel="external">Avatars for Github</a></h3><p>在github的首页 News页面上默认只显示昵称，这个插件可以让头像也显示出来，更容易分清是谁在”程序员最大的同性交友网站”上和你有了交互<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_5.png" alt=""></p>
<h3 id="9-Octotree"><a href="#9-Octotree" class="headerlink" title="9. Octotree"></a>9. <a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc?hl=zh-CN" target="_blank" rel="external">Octotree</a></h3><p>算是最实用的一个github插件了，在一个项目页面的左侧可以打开该项目的树状结构图，可以方便的直达某一个文件，再也不用一层一层点进去了<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_6.png" alt=""></p>
<h3 id="10-ADB-Plugin"><a href="#10-ADB-Plugin" class="headerlink" title="10. ADB Plugin"></a>10. <a href="https://chrome.google.com/webstore/detail/adb/dpngiggdglpdnjdoaefidgiigpemgage?hl=zh-CN" target="_blank" rel="external">ADB Plugin</a></h3><p>支持在浏览器上连接手机，进行adb操作，方便Android开发调试</p>
<h3 id="11-Search-by-Image"><a href="#11-Search-by-Image" class="headerlink" title="11. Search by Image"></a>11. <a href="https://chrome.google.com/webstore/detail/search-by-image-by-google/dajedkncpodkggklbegccjpmnglmnflm?hl=zh-CN" target="_blank" rel="external">Search by Image</a></h3><p>Google官方插件，对图片右键选择“Search Google with Image”，直接使用Google的以图搜图功能，需要科学上网</p>
<h3 id="12-The-QR-Code-Extension"><a href="#12-The-QR-Code-Extension" class="headerlink" title="12. The QR Code Extension"></a>12. <a href="https://chrome.google.com/webstore/detail/the-qr-code-extension/oijdcdmnjjgnnhgljmhkjlablaejfeeb?hl=zh-CN" target="_blank" rel="external">The QR Code Extension</a></h3><p>直接生成当前页面的二维码</p>
<h3 id="13-Octo-Mate"><a href="#13-Octo-Mate" class="headerlink" title="13. Octo Mate"></a>13. <a href="https://chrome.google.com/webstore/detail/octo-mate/baggcehellihkglakjnmnhpnjmkbmpkf" target="_blank" rel="external">Octo Mate</a></h3><p>一款多功能的github插件，能够在项目主页显示项目的大小，在屏幕右侧列出README大纲，点击单个文件的图标还能下载单个文件，都是实用功能</p>
<h3 id="14-GitHub-Awesome-Autocomplete"><a href="#14-GitHub-Awesome-Autocomplete" class="headerlink" title="14. GitHub Awesome Autocomplete"></a>14. <a href="https://chrome.google.com/webstore/detail/github-awesome-autocomple/djkfdjpoelphhdclfjhnffmnlnoknfnd?hl=zh-CN" target="_blank" rel="external">GitHub Awesome Autocomplete</a></h3><p>由Algolia搜索提供的github搜索栏扩展插件，在搜索栏里输入内容的同时就会显示部分搜索结果，比原本的搜索模式方便的多<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_10.png" alt=""></p>
<h3 id="15-Custom-Google™-Background"><a href="#15-Custom-Google™-Background" class="headerlink" title="15. Custom Google™ Background"></a>15. <a href="https://chrome.google.com/webstore/detail/custom-google-background/jepibmfmhopgkplegmkjgifmhabbjadg?hl=zh-CN" target="_blank" rel="external">Custom Google™ Background</a></h3><p>支持自定义Google搜索主页的背景和小控件的显示，可以换上自己喜欢的壁纸，把用不到的小控件隐去<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_8.png" alt=""></p>
<h3 id="16-划词翻译"><a href="#16-划词翻译" class="headerlink" title="16. 划词翻译"></a>16. <a href="https://chrome.google.com/webstore/search/%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91?hl=zh-CN" target="_blank" rel="external">划词翻译</a></h3><p>可以直接翻译鼠标滑动选中的内容，我设置成了按住ctrl/command时翻译，MacBook支持三指触控翻译可以不用这个插件，Windows下还算好用</p>
<h3 id="17-Tampermonkey"><a href="#17-Tampermonkey" class="headerlink" title="17. Tampermonkey"></a>17. <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN" target="_blank" rel="external">Tampermonkey</a></h3><p>这款扩展插件就比较神奇了，浏览器脚本管理工具，可以开关、添删、编辑脚本。脚本和扩展插件不同，功能丰富强大的脚本也是比比皆是，比如屏蔽百度网盘下载限制，屏蔽主流视频网站片头广告，优化一些页面显示效果，还有一些老司机开车脚本…咳咳，各种脚本可以去<a href="https://greasyfork.org/zh-CN" target="_blank" rel="external">greasyfork.org</a>下载，配合这个插件使用</p>
<h3 id="18-LastPass"><a href="#18-LastPass" class="headerlink" title="18. LastPass"></a>18. <a href="https://chrome.google.com/webstore/search/LastPass?hl=zh-CN" target="_blank" rel="external">LastPass</a></h3><p>现在各种网站都要求注册，LastPass就是管理记录各个站点密码的，可以一键添加，换浏览器了也可以同步记录，好记性不如烂笔头</p>
<h3 id="19-Checker-Plus-for-Gmail"><a href="#19-Checker-Plus-for-Gmail" class="headerlink" title="19. Checker Plus for Gmail"></a>19. <a href="https://chrome.google.com/webstore/search/checker%20plus%20for%20gmail?hl=zh-CN" target="_blank" rel="external">Checker Plus for Gmail</a></h3><p>Gmail作为主力邮箱的赶紧装上吧，邮件来了第一时间弹窗提醒，点开插件图标可以快速查看邮件，还支持对邮件做各种操作<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_9.png" alt=""></p>
<h3 id="20-Postman"><a href="#20-Postman" class="headerlink" title="20. Postman"></a>20. <a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=zh-CN" target="_blank" rel="external">Postman</a></h3><p>我们平时可以在浏览器上直接测试<code>GET</code>型接口，但是对于<code>POST</code>,<code>DELETE</code>这些需要附带表单或是附带头部信息的接口就不方便调试了，Postman就满足任意类型的接口调试，可以添加各种信息来模拟接口访问，麻麻再也不用担心调接口了&gt; &lt;<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_7.png" alt=""></p>
<h1 id="Android-Studio篇"><a href="#Android-Studio篇" class="headerlink" title="Android Studio篇"></a>Android Studio篇</h1><p>Android Studio实用插件挺多的，我只用了最需要的3款</p>
<h3 id="1-GsonFormat"><a href="#1-GsonFormat" class="headerlink" title="1. GsonFormat"></a>1. GsonFormat</h3><p>可以将一串Json直接转化成对应的实体类，在类中右键Generate…-&gt;GsonFormat,将Json粘贴到窗口中，点击确定就会生成实体类的代码，懒人必备<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_1.png" alt=""></p>
<h3 id="2-ButterKnife-Zelezny"><a href="#2-ButterKnife-Zelezny" class="headerlink" title="2. ButterKnife Zelezny"></a>2. ButterKnife Zelezny</h3><p>可以根据xml中定义好的控件生成butter knife的控件注入代码，在<code>R.layout.xxx</code>上右键Generate…-&gt;Generate Butterknife Injections,点击确定生成代码，懒人必备<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_2.png" alt=""></p>
<h3 id="3-Sexy-Editor"><a href="#3-Sexy-Editor" class="headerlink" title="3. Sexy Editor"></a>3. Sexy Editor</h3><p>可以给代码编辑区设置背景，这个要看个人爱好了，Preferences -&gt; Other Settings -&gt; SexyEditor 在File list中放入图片路径即可<br><img src="http://odck16ake.bkt.clouddn.com/tools_plugin_3.png" alt=""><br>背景是E.M.T!</p>
<h1 id="Sublime-Text篇"><a href="#Sublime-Text篇" class="headerlink" title="Sublime Text篇"></a>Sublime Text篇</h1><h3 id="1-Material"><a href="#1-Material" class="headerlink" title="1. Material"></a>1. Material</h3><p>准确来说这个是主题，目前我正在用的这款，作为Android Developer看到Material就被吸引过去了Σ( ° △ °|||)︴<br><img src="http://odck16ake.bkt.clouddn.com/web_api_code_0.png" alt=""></p>
<h3 id="2-AdvancedNewFile"><a href="#2-AdvancedNewFile" class="headerlink" title="2. AdvancedNewFile"></a>2. AdvancedNewFile</h3><p><code>command +Shift+N</code>快速创建新文件</p>
<h3 id="3-Emmet"><a href="#3-Emmet" class="headerlink" title="3. Emmet"></a>3. Emmet</h3><p>开发前端必备</p>
<h3 id="4-BracketHighlighter"><a href="#4-BracketHighlighter" class="headerlink" title="4. BracketHighlighter"></a>4. BracketHighlighter</h3><p>让括号、引号等配对符号高亮</p>
<h3 id="5-Babel"><a href="#5-Babel" class="headerlink" title="5. Babel"></a>5. Babel</h3><p>javascript(ES6)代码高亮</p>
<h3 id="6-SublimeLinter"><a href="#6-SublimeLinter" class="headerlink" title="6. SublimeLinter"></a>6. SublimeLinter</h3><p>javascript静态语法检测，出现错误会标红</p>
<h3 id="7-JavaScript-Completions和Java​Script-amp-Node​JS-Snippets"><a href="#7-JavaScript-Completions和Java​Script-amp-Node​JS-Snippets" class="headerlink" title="7. JavaScript Completions和Java​Script &amp; Node​JS Snippets"></a>7. JavaScript Completions和Java​Script &amp; Node​JS Snippets</h3><p>javascript代码补全</p>
<h3 id="8-All-Autocomplete"><a href="#8-All-Autocomplete" class="headerlink" title="8. All Autocomplete"></a>8. All Autocomplete</h3><p>记录打开过的文件的关键字用于补全</p>
<h3 id="9-SublimeCodeIntel"><a href="#9-SublimeCodeIntel" class="headerlink" title="9. SublimeCodeIntel"></a>9. SublimeCodeIntel</h3><p>项目内代码补全</p>
<h3 id="10-Terminal"><a href="#10-Terminal" class="headerlink" title="10. Terminal"></a>10. Terminal</h3><p><code>command+shift+T</code>在当前路径下打开终端</p>
<h3 id="11-JsFormat"><a href="#11-JsFormat" class="headerlink" title="11. JsFormat"></a>11. JsFormat</h3><p>javascript和json自动格式化排版</p>
<h3 id="12-react-native-snippets"><a href="#12-react-native-snippets" class="headerlink" title="12. react-native-snippets"></a>12. react-native-snippets</h3><p>添加react native代码片段</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;合适的插件对提升工作效率尤为重要，&lt;del&gt;偶尔还可以装个X，&lt;/del&gt;大致整理了自己平时最常用的插件，主要是Chrome，Android Studio，Sublime Text的插件，长期更新~~&lt;br&gt;
    
    </summary>
    
      <category term="Tools" scheme="blog.codeest.moe/categories/Tools/"/>
    
    
      <category term="tool" scheme="blog.codeest.moe/tags/tool/"/>
    
      <category term="plugin" scheme="blog.codeest.moe/tags/plugin/"/>
    
      <category term="chrome" scheme="blog.codeest.moe/tags/chrome/"/>
    
      <category term="android studio" scheme="blog.codeest.moe/tags/android-studio/"/>
    
      <category term="sublime text" scheme="blog.codeest.moe/tags/sublime-text/"/>
    
  </entry>
  
  <entry>
    <title>将node.js编写的API部署到服务器</title>
    <link href="blog.codeest.moe/2016/09/24/web-api/"/>
    <id>blog.codeest.moe/2016/09/24/web-api/</id>
    <published>2016-09-24T15:35:55.000Z</published>
    <updated>2016-09-24T15:09:23.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<h1 id="1-先确保在本地跑通项目"><a href="#1-先确保在本地跑通项目" class="headerlink" title="1.先确保在本地跑通项目"></a>1.先确保在本地跑通项目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install</div><div class="line"></div><div class="line">node start</div></pre></td></tr></table></figure>
<p><img src="http://odck16ake.bkt.clouddn.com/web_api_1.png" alt=""></p>
<h1 id="2-服务器配置node-js环境"><a href="#2-服务器配置node-js环境" class="headerlink" title="2.服务器配置node.js环境"></a>2.服务器配置node.js环境</h1><p>1.登陆服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -p [Port] root@[IP]</div></pre></td></tr></table></figure></p>
<p>2.更新yum<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y update</div></pre></td></tr></table></figure></p>
<p>3.安装一组编译源码的工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y groupinstall &quot;Development Tools&quot;</div></pre></td></tr></table></figure></p>
<p>4.进入用于存放源码的文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/src</div></pre></td></tr></table></figure></p>
<p>5.下载node.js源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://nodejs.org/dist/latest-v6.x/node-v6.6.0.tar.gz</div></pre></td></tr></table></figure></p>
<p>6.解压文件并进入目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar zxf node-v6.6.0.tar.gz</div><div class="line">cd node-v6.6.0</div></pre></td></tr></table></figure></p>
<p>7.执行脚本进行编译预处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure</div></pre></td></tr></table></figure></p>
<p>8.编译源码并安装node.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>PS:我在这里踩到一个坑，服务器上gcc编译器的版本太低，无法编译最新版的node.js源码，在升级了gcc版本后重新执行这个步骤重编了一遍</p>
<p>9.安装forever来保证项目进程持续存活<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -g install forever</div></pre></td></tr></table></figure></p>
<p>10.建立超级链接，不然调用指令时会出现”command not found”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /usr/local/bin/node /usr/bin/node</div><div class="line">sudo ln -s /usr/local/lib/node /usr/lib/node </div><div class="line">sudo ln -s /usr/local/bin/npm /usr/bin/npm </div><div class="line">sudo ln -s /usr/local/bin/node-waf /usr/bin/node-waf </div><div class="line">sudo ln -s /usr/local/bin/forever /usr/bin/forever</div></pre></td></tr></table></figure></p>
<h1 id="3-上传项目文件到服务器并执行"><a href="#3-上传项目文件到服务器并执行" class="headerlink" title="3.上传项目文件到服务器并执行"></a>3.上传项目文件到服务器并执行</h1><p>1.由于接口访问是http请求默认80端口，将代码中的端口监听<code>app.listen(3000);</code>改为<code>app.listen(80);</code></p>
<p>2.压缩工程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zcvf [FileName.tar.gz] [DirName]</div></pre></td></tr></table></figure></p>
<p>3.上传文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -P [Port] [FileName.tar.gz] root@[IP]:[DirName]</div></pre></td></tr></table></figure></p>
<p>4.登陆服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -p [Port] root@[IP]</div></pre></td></tr></table></figure></p>
<p>5.到达目标目录后解压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxvf [FileName.tar.gz]</div></pre></td></tr></table></figure></p>
<p>6.进入工程目录，使用forever启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">forever start start.js</div></pre></td></tr></table></figure></p>
<p>7.检查运行情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">forever start list</div></pre></td></tr></table></figure></p>
<p><img src="http://odck16ake.bkt.clouddn.com/web_api_4.png" alt=""><br>PS:这种是正常运行的状态，如果后面状态是STOPED的话说明运行失败，去项目目录下执行<code>node start</code>通过编译失败的信息来判断问题出在哪</p>
<p>8.需要关闭运行时使用如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">forever stop 0</div></pre></td></tr></table></figure></p>
<p>我使用的域名是codeest.me，运行效果如下~<br><img src="http://odck16ake.bkt.clouddn.com/web_api_3.png" alt=""><br>好了收工~可以用App里的Retrofit框架来调戏这个API了(/ω＼)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;承接上篇文章，为了随时随地都能访问接口现在需要将它部署到服务器，到了这一步你目前应该已经有写好的node.js项目 x1，能够登陆的服务器 x1，最好还有域名 x1，为服务器地址添加域名解析这里就不讨论了，下面一步步来部署&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="blog.codeest.moe/categories/Web/"/>
    
    
      <category term="web" scheme="blog.codeest.moe/tags/web/"/>
    
      <category term="api" scheme="blog.codeest.moe/tags/api/"/>
    
      <category term="node.js" scheme="blog.codeest.moe/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>使用node.js + koa2搭建RESTful API</title>
    <link href="blog.codeest.moe/2016/09/21/web-api-code/"/>
    <id>blog.codeest.moe/2016/09/21/web-api-code/</id>
    <published>2016-09-21T12:25:50.000Z</published>
    <updated>2016-09-24T15:09:06.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<h1 id="1-选择语言与框架"><a href="#1-选择语言与框架" class="headerlink" title="1.选择语言与框架"></a>1.选择语言与框架</h1><p></p><p>考虑了3款比较热门的后端语言，PHP，JavaScript（node.js），Python，打算从中选择一款，分别比较了它们的特点，最后选定了用node.js来开发，原因有3点：<br><br>1.js目前比较泛用，本身既能写Web前端，又能通过node.js来写后端，还能通过ReactNative来写移动端，真的是居家旅行必备2333<br>2.node.js搭建的服务端在性能上很出色<br>3.我本人也对Web开发很感兴趣QwQ</p><br>然后就是框架的选择了，node.js的web框架主流的选择有express和koa，koa算是express的进化版，技术还是新的好~ koa!就决定是你了╮(￣▽￣)╭<p></p>
<h1 id="2-编写node-js代码"><a href="#2-编写node-js代码" class="headerlink" title="2.编写node.js代码"></a>2.编写node.js代码</h1><p>这部分的内容还是比较多的，更推荐看专业的教程，推荐廖雪峰老师的JavaScript教程中的node.js部分，最后会手把手教你使用node.js构筑基于koa2的MVC架构的RESTful API项目，可以去下载demo扩展成满足自己项目需要的API<br></p>
<p><big><p><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434501245426ad4b91f2b880464ba876a8e3043fc8ef000" target="_blank" rel="external">教程地址</a></p></big><br>我写的简易<a href="https://github.com/codeestX/my-restful-api" target="_blank" rel="external">RESTful API demo</a>如下<br><img src="http://odck16ake.bkt.clouddn.com/web_api_code_0.png" alt=""></p>
<h1 id="3-分析API类型"><a href="#3-分析API类型" class="headerlink" title="3.分析API类型"></a>3.分析API类型</h1><p>常见的API类型有GET、POST、DELETE、PUT，这几种类型的写法在廖老师的教程中都有涉及，其中GET通常又分为3种类型：</p>
<ul>
<li>返回Json</li>
<li>返回图片资源</li>
<li>返回用于下载的文件</li>
</ul>
<p>教程中没有划分这几种GET类型，我在自己的demo中分别实践了一遍</p>
<h3 id="3-1-返回Json"><a href="#3-1-返回Json" class="headerlink" title="3.1 返回Json"></a>3.1 返回Json</h3><p>这种类型最常用，直接返回可以转化为实体类的Json结构体<br>koa中type类型定义为<code>application/json</code> body直接传入一个对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">'GET /api/geeknews/version'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</div><div class="line">        ctx.rest(&#123;</div><div class="line">        	<span class="attr">code</span>: version.getVersionCode(),</div><div class="line">        	<span class="attr">des</span>: version.getVersionDes()</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ctx.rest = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</div><div class="line">                    ctx.response.type = <span class="string">'application/json'</span>;</div><div class="line">                    ctx.response.body = &#123;</div><div class="line">                        <span class="attr">code</span>: <span class="number">200</span>,</div><div class="line">                        <span class="attr">message</span>: <span class="string">''</span>,</div><div class="line">                        <span class="attr">data</span>: data</div><div class="line">                    &#125;;</div><div class="line">                &#125;</div></pre></td></tr></table></figure>
<p><img src="http://odck16ake.bkt.clouddn.com/web_api_1.png" alt=""></p>
<h3 id="3-2-返回图片资源"><a href="#3-2-返回图片资源" class="headerlink" title="3.2 返回图片资源"></a>3.2 返回图片资源</h3><p>这种类型在Android端多用于Glide、Picasso等框架加载图片<br>koa中type类型定义为<code>.jpg</code>（也可以是其他图片类型） body传入读取到的文件流<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="string">'GET /img/test.jpg'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</div><div class="line">        ctx.rest(</div><div class="line">            fs.createReadStream(imgPath)</div><div class="line">        );</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ctx.rest = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</div><div class="line">                    ctx.response.type = <span class="string">'.jpg'</span>;</div><div class="line">                    ctx.response.body = data;</div><div class="line">                &#125;</div></pre></td></tr></table></figure>
<p><img src="http://odck16ake.bkt.clouddn.com/web_api_code_1.png" alt=""></p>
<h3 id="3-3-返回用于下载的文件"><a href="#3-3-返回用于下载的文件" class="headerlink" title="3.3 返回用于下载的文件"></a>3.3 返回用于下载的文件</h3><p>这种类型在Android端多用于更新apk包，下载配置文件等<br>koa中type类型定义为<code>application/octet-stream</code> body传入读取到的文件流<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="string">'GET /apk/geeknews.apk'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</div><div class="line">        ctx.rest(</div><div class="line">            fs.createReadStream(filePath)</div><div class="line">        );</div><div class="line">    &#125;,</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ctx.rest = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</div><div class="line">                    ctx.response.type = <span class="string">'application/octet-stream'</span>;</div><div class="line">                    ctx.response.body = data;</div><div class="line">                &#125;</div></pre></td></tr></table></figure>
<p><img src="http://odck16ake.bkt.clouddn.com/web_api_code_2.png" alt=""><br><img src="http://odck16ake.bkt.clouddn.com/web_api_code_3.png" alt=""></p>
<p>这篇文章主要的目的在于让大家少走弯路，具体代码还是需要去参考上面列出的教程和demo，掌握了之后自己写一些简单的RESTful API还是很轻松的(´・ω・`)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为移动开发者，平时都是用服务端提供的API来做开发，但自己一直都对API的实现比较感兴趣(｡・`ω´･) 正好最近写了一款App，在做版本更新检测功能的时候打算不借助第三方SDK，用自己实现的RESTful API来完成这个功能&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="blog.codeest.moe/categories/Web/"/>
    
    
      <category term="web" scheme="blog.codeest.moe/tags/web/"/>
    
      <category term="api" scheme="blog.codeest.moe/tags/api/"/>
    
      <category term="node.js" scheme="blog.codeest.moe/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Hello, Blog</title>
    <link href="blog.codeest.moe/2016/09/11/post0/"/>
    <id>blog.codeest.moe/2016/09/11/post0/</id>
    <published>2016-09-11T09:06:44.000Z</published>
    <updated>2016-09-13T16:20:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>博客开张啦╮(￣▽￣)╭</p>
<p>由 <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a> 强力驱动  主题 - <a href="https://github.com/kaedea/hexo-theme-themia" target="_blank" rel="external">Themia</a><br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客开张啦╮(￣▽￣)╭&lt;/p&gt;
&lt;p&gt;由 &lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt; 强力驱动  主题 - &lt;a href=&quot;https://github.com/kaedea/hexo-theme-themia&quot;&gt;Themia&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
